CREATE SEQUENCE batch_job_seq START 1;

CREATE SEQUENCE batch_job_execution_seq START 1;

CREATE TABLE batch_job_instance (
    JOB_INSTANCE_ID BIGINT PRIMARY KEY,
    JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(32) NOT NULL,
    VERSION BIGINT,
    CREATE_TIME TIMESTAMP(6) NOT NULL DEFAULT NOW()
);

CREATE TABLE batch_job_execution (
    JOB_EXECUTION_ID BIGINT PRIMARY KEY,
    JOB_INSTANCE_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    STATUS VARCHAR(10),
    EXIT_CODE VARCHAR(20),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    VERSION BIGINT,
    FOREIGN KEY (JOB_INSTANCE_ID) REFERENCES batch_job_instance(JOB_INSTANCE_ID)
);

ALTER TABLE batch_job_execution ADD COLUMN job_configuration_location VARCHAR(250);

CREATE TABLE batch_job_execution_params (
    JOB_EXECUTION_ID BIGINT NOT NULL,
    TYPE_CD VARCHAR(6) NOT NULL,
    KEY_NAME VARCHAR(100) NOT NULL,
    STRING_VAL VARCHAR(250),
    DATE_VAL TIMESTAMP,
    LONG_VAL BIGINT,
    DOUBLE_VAL DOUBLE PRECISION,
    IDENTIFYING CHAR(1) NOT NULL,
    PRIMARY KEY (JOB_EXECUTION_ID, TYPE_CD, KEY_NAME),
    FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES batch_job_execution(JOB_EXECUTION_ID)
);

CREATE TABLE batch_job_execution_context (
    JOB_EXECUTION_ID BIGINT PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500),
    SERIALIZED_CONTEXT OID,
    FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES batch_job_execution(JOB_EXECUTION_ID)
);

CREATE TABLE batch_step_execution (
    STEP_EXECUTION_ID BIGINT PRIMARY KEY,
    VERSION BIGINT,
    STEP_NAME VARCHAR(100),
    JOB_EXECUTION_ID BIGINT,
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    STATUS VARCHAR(10),
    COMMIT_COUNT BIGINT,
    READ_COUNT BIGINT,
    FILTER_COUNT BIGINT,
    WRITE_COUNT BIGINT,
    EXIT_CODE VARCHAR(20),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES batch_job_execution(JOB_EXECUTION_ID)
);

ALTER TABLE batch_step_execution ADD COLUMN read_skip_count BIGINT;

ALTER TABLE batch_step_execution ADD COLUMN write_skip_count BIGINT;

ALTER TABLE batch_step_execution ADD COLUMN process_skip_count BIGINT;

ALTER TABLE batch_step_execution ADD COLUMN rollback_count BIGINT;

CREATE SEQUENCE batch_step_execution_seq;

CREATE TABLE batch_step_execution_context (
    STEP_EXECUTION_ID BIGINT PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500),
    SERIALIZED_CONTEXT OID
);
